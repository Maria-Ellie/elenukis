{"ast":null,"code":"var _s = $RefreshSig$();\nfunction useWindowSize() {\n  _s();\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n_s(useWindowSize, \"QMj9MAWfP9FhhDhmYymy1+gQ3zw=\");\nexport default useWindowSize;","map":{"version":3,"names":["useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"sources":["/Users/elenamedrano/Desktop/my-app/src/useWindowSize.js"],"sourcesContent":["function useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n      width: undefined,\n      height: undefined,\n    });\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return windowSize;\n  }\n\n  export default useWindowSize;"],"mappings":";AAAA,SAASA,aAAa,GAAG;EAAA;EACrB;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC;IAC3CC,KAAK,EAAEC,SAAS;IAChBC,MAAM,EAAED;EACV,CAAC,CAAC;EACFE,SAAS,CAAC,MAAM;IACd;IACA,SAASC,YAAY,GAAG;MACtB;MACAN,aAAa,CAAC;QACZE,KAAK,EAAEK,MAAM,CAACC,UAAU;QACxBJ,MAAM,EAAEG,MAAM,CAACE;MACjB,CAAC,CAAC;IACJ;IACA;IACAF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAC/C;IACAA,YAAY,EAAE;IACd;IACA,OAAO,MAAMC,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR,OAAOP,UAAU;AACnB;AAAC,GAxBMD,aAAa;AA0BpB,eAAeA,aAAa"},"metadata":{},"sourceType":"module"}